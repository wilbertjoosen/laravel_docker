(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/material/core'), require('@angular/cdk/coercion'), require('rxjs/operators'), require('rxjs'), require('@angular/cdk/a11y'), require('@angular/common'), require('@angular/material'), require('@angular/core'), require('@angular/forms'), require('ngx-wig')) :
    typeof define === 'function' && define.amd ? define('mat-ngx-wig', ['exports', '@angular/material/core', '@angular/cdk/coercion', 'rxjs/operators', 'rxjs', '@angular/cdk/a11y', '@angular/common', '@angular/material', '@angular/core', '@angular/forms', 'ngx-wig'], factory) :
    (factory((global['mat-ngx-wig'] = {}),global.ng.material.core,global.ng.cdk.coercion,global.rxjs.operators,global.rxjs,global.ng.cdk.a11y,global.ng.common,global.ng.material,global.ng.core,global.ng.forms,global.ngxWig));
}(this, (function (exports,core,coercion,operators,rxjs,a11y,common,material,core$1,forms,ngxWig) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (b.hasOwnProperty(p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    // tslint:disable-next-line:typedef
    /** @type {?} */
    var _MatInputMixinBase = material.mixinErrorState(material.MatInputBase);
    var MatNgxWigComponent = /** @class */ (function (_super) {
        __extends(MatNgxWigComponent, _super);
        function MatNgxWigComponent(ngControl, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, _focusMonitor, _elRef) {
            var _this = _super.call(this, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) || this;
            _this.ngControl = ngControl;
            _this._focusMonitor = _focusMonitor;
            _this._elRef = _elRef;
            _this._uid = "lms-mat-ngx-wig-" + MatNgxWigComponent.nextId++;
            _this.describedBy = '';
            _this.focused = false;
            _this._required = false;
            _this._disabled = false;
            _this.shouldPlaceholderFloat = false;
            _this.shouldLabelFloat = false;
            _this.controlType = 'mat-ngx-wig';
            _this._destroy$$ = new rxjs.Subject();
            _this.editorControl = new forms.FormControl();
            _this._onChange = function () { };
            _this._onTouched = function () { };
            if (ngControl !== null) {
                _this.ngControl.valueAccessor = _this;
            }
            return _this;
        }
        Object.defineProperty(MatNgxWigComponent.prototype, "id", {
            get: /**
             * @return {?}
             */ function () {
                return this._id;
            },
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this._id = value || this._uid;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MatNgxWigComponent.prototype, "value", {
            get: /**
             * @return {?}
             */ function () {
                return this.editorControl.value;
            },
            set: /**
             * @param {?} newValue
             * @return {?}
             */ function (newValue) {
                this.writeValue(newValue);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MatNgxWigComponent.prototype, "placeholder", {
            get: /**
             * @return {?}
             */ function () {
                return this._placeholder;
            },
            set: /**
             * @param {?} newPlaceholder
             * @return {?}
             */ function (newPlaceholder) {
                this._placeholder = newPlaceholder;
                this.stateChanges.next();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MatNgxWigComponent.prototype, "empty", {
            get: /**
             * @return {?}
             */ function () {
                return !!this.editorControl.value;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MatNgxWigComponent.prototype, "required", {
            get: /**
             * @return {?}
             */ function () {
                return this._required;
            },
            set: /**
             * @param {?} isRequired
             * @return {?}
             */ function (isRequired) {
                this._required = coercion.coerceBooleanProperty(isRequired);
                this.stateChanges.next();
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(MatNgxWigComponent.prototype, "disabled", {
            get: /**
             * @return {?}
             */ function () {
                return this._disabled;
            },
            set: /**
             * @param {?} isDisabled
             * @return {?}
             */ function (isDisabled) {
                this.setDisabledState(isDisabled);
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        MatNgxWigComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () {
                var _this = this;
                this._focusMonitor.monitor(this._elRef.nativeElement, true)
                    .subscribe(function (origin) {
                    _this.focused = !!origin;
                    if (!_this.focused) {
                        _this._onTouched();
                    }
                    _this.stateChanges.next();
                });
                this.editorControl.valueChanges
                    .pipe(operators.distinctUntilChanged(), operators.filter(function () { return _this.editorControl.enabled; }), operators.takeUntil(this._destroy$$))
                    .subscribe(function (newValue) {
                    _this._onChange(newValue);
                });
            };
        /**
         * @return {?}
         */
        MatNgxWigComponent.prototype.ngDoCheck = /**
         * @return {?}
         */
            function () {
                if (this.ngControl) {
                    this.updateErrorState();
                }
            };
        /**
         * @return {?}
         */
        MatNgxWigComponent.prototype.ngOnChanges = /**
         * @return {?}
         */
            function () {
                this.stateChanges.next();
            };
        /**
         * @param {?} ids
         * @return {?}
         */
        MatNgxWigComponent.prototype.setDescribedByIds = /**
         * @param {?} ids
         * @return {?}
         */
            function (ids) {
                this.describedBy = ids.join(' ');
            };
        /**
         * @param {?} _event
         * @return {?}
         */
        MatNgxWigComponent.prototype.onContainerClick = /**
         * @param {?} _event
         * @return {?}
         */
            function (_event) { };
        /**
         * @param {?} newValue
         * @return {?}
         */
        MatNgxWigComponent.prototype.writeValue = /**
         * @param {?} newValue
         * @return {?}
         */
            function (newValue) {
                this.editorControl.setValue(newValue, { emitEvent: false });
                this.stateChanges.next();
            };
        /**
         * @param {?} isDisabled
         * @return {?}
         */
        MatNgxWigComponent.prototype.setDisabledState = /**
         * @param {?} isDisabled
         * @return {?}
         */
            function (isDisabled) {
                this._disabled = coercion.coerceBooleanProperty(isDisabled);
                if (this._disabled) {
                    this.editorControl.disable();
                }
                else {
                    this.editorControl.enable();
                }
                this.stateChanges.next();
            };
        /**
         * @return {?}
         */
        MatNgxWigComponent.prototype.ngOnDestroy = /**
         * @return {?}
         */
            function () {
                this._destroy$$.next();
                this._destroy$$.complete();
                this.stateChanges.complete();
                this._focusMonitor.stopMonitoring(this._elRef.nativeElement);
            };
        /**
         * @param {?} fn
         * @return {?}
         */
        MatNgxWigComponent.prototype.registerOnChange = /**
         * @param {?} fn
         * @return {?}
         */
            function (fn) {
                this._onChange = fn;
            };
        /**
         * @param {?} fn
         * @return {?}
         */
        MatNgxWigComponent.prototype.registerOnTouched = /**
         * @param {?} fn
         * @return {?}
         */
            function (fn) {
                this._onTouched = fn;
            };
        MatNgxWigComponent.nextId = 0;
        MatNgxWigComponent.decorators = [
            { type: core$1.Component, args: [{
                        selector: 'mat-ngx-wig',
                        template: "<ngx-wig [formControl]=\"editorControl\"\n         [placeholder]=\"placeholder\">\n</ngx-wig>\n",
                        encapsulation: core$1.ViewEncapsulation.None,
                        providers: [
                            {
                                provide: material.MatFormFieldControl,
                                useExisting: MatNgxWigComponent
                            }
                        ],
                        host: {
                            '[attr.id]': 'id',
                            class: 'component-wrapper'
                        },
                        styles: [".mat-form-field-type-mat-ngx-wig .mat-form-field-wrapper{padding:0!important}.mat-form-field-type-mat-ngx-wig .mat-form-field-infix{padding:0}.mat-form-field-type-mat-ngx-wig .mat-form-field-label-wrapper{display:none}.mat-form-field-type-mat-ngx-wig .mat-error{padding:8px 24px 24px;word-break:break-all}.mat-form-field-type-mat-ngx-wig .mat-hint{flex:1}.mat-form-field-type-mat-ngx-wig.mat-form-field{display:block!important;width:100%;line-height:inherit!important}.mat-form-field-type-mat-ngx-wig .mat-form-field-flex{display:flex!important;align-items:center!important;width:auto!important;line-height:24px;font-size:16px}.mat-form-field-type-mat-ngx-wig .mat-form-field-infix{border-top:none;width:100%!important}.mat-form-field-type-mat-ngx-wig .mat-form-field-infix:not(:first-child){margin-left:6px}.mat-form-field-type-mat-ngx-wig .mat-form-field-underline{position:relative!important;bottom:auto;margin-top:-1px}.mat-form-field-type-mat-ngx-wig .mat-form-field-underline .mat-form-field-ripple{top:-1px!important}.mat-form-field-type-mat-ngx-wig .mat-form-field-subscript-wrapper{position:static!important;font-size:12px;line-height:18px;margin-top:0}.mat-form-field-type-mat-ngx-wig .mat-form-field-hint-spacer{display:none}.mat-form-field-type-mat-ngx-wig.mat-form-field-disabled{cursor:not-allowed!important}", ".component-wrapper{display:block;width:100%}", ".nw-editor__res ol,.nw-editor__res ul{list-style-position:outside;margin-left:18px;padding:6px 0}.nw-editor__res ul{list-style-type:disc}.nw-editor__res ol{list-style-type:decimal}.nw-editor__res b,.nw-editor__res strong{font-weight:600}.nw-editor__res em,.nw-editor__res i{font-style:italic}.nw-editor__res a{color:#40a3de;text-decoration:underline}.nw-editor__res a:hover{text-decoration:none}.nw-toolbar{padding:0 21px!important;background:0 0!important;border-left:none!important;border-right:none!important;border-top:1px solid rgba(11,48,64,.2)!important;border-bottom:1px solid rgba(11,48,64,.2)!important;border-radius:0!important;color:#0b3040!important}.nw-toolbar__item{padding:3px;border-right:0!important}.nw-button{border:none!important;display:flex!important;align-items:center;justify-content:center;width:36px!important;height:36px!important;border-radius:2px!important;color:inherit;transition:opacity .2s}.nw-button:focus{background-color:rgba(11,48,64,.1)!important}.nw-button:active{background-color:rgba(11,48,64,.15)!important}.nw-button:before{font-size:22px!important}.nw-button--active{background-color:rgba(11,48,64,.1)!important}.nw-editor-container{border:none!important;border-radius:0!important}.nw-editor__src{padding:16px 24px!important}.nw-editor{display:block!important;padding:0!important;height:auto!important}.nw-editor__res{display:block!important;padding:16px 24px!important;font-size:16px;line-height:24px;height:400px!important;overflow:auto}.nw-editor__placeholder{padding:16px 24px!important}"]
                    }] }
        ];
        /** @nocollapse */
        MatNgxWigComponent.ctorParameters = function () {
            return [
                { type: forms.NgControl, decorators: [{ type: core$1.Optional }, { type: core$1.Self }] },
                { type: forms.NgForm, decorators: [{ type: core$1.Optional }] },
                { type: forms.FormGroupDirective, decorators: [{ type: core$1.Optional }] },
                { type: core.ErrorStateMatcher },
                { type: a11y.FocusMonitor },
                { type: core$1.ElementRef }
            ];
        };
        MatNgxWigComponent.propDecorators = {
            id: [{ type: core$1.Input }],
            describedBy: [{ type: core$1.HostBinding, args: ['attr.aria-describedby',] }],
            placeholder: [{ type: core$1.Input }],
            required: [{ type: core$1.Input }],
            disabled: [{ type: core$1.Input }]
        };
        return MatNgxWigComponent;
    }(_MatInputMixinBase));

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var MatNgxWigModule = /** @class */ (function () {
        function MatNgxWigModule() {
        }
        MatNgxWigModule.decorators = [
            { type: core$1.NgModule, args: [{
                        imports: [
                            a11y.A11yModule,
                            common.CommonModule,
                            material.MatFormFieldModule,
                            material.MatInputModule,
                            ngxWig.NgxWigModule,
                            forms.ReactiveFormsModule,
                        ],
                        declarations: [MatNgxWigComponent],
                        exports: [MatNgxWigComponent]
                    },] }
        ];
        return MatNgxWigModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    exports.MatNgxWigComponent = MatNgxWigComponent;
    exports.MatNgxWigModule = MatNgxWigModule;
    exports.ɵa = _MatInputMixinBase;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=mat-ngx-wig.umd.js.map